{"version":3,"sources":["../src/upload.jsx"],"names":["uploadStatusConfig","init","btn","clickName","barClassName","md5","process","done","error","synthetize","success","fail","check_fail","currying","fn","ahead","behind","LargeUploader","setFileItem","key","value","id","Promise","resolve","fileList","state","copy","result","filter","item","length","setState","setUploadStatus","handleBeforeFileQueued","beforeFileQueued","props","file","handleFileQueued","auto","options","percentage","uploadStatus","image_name","uploader","md5File","progress","then","val","upload","handleBeforeSend","block","data","md5Val","chunks","fillDataBeforeSend","v","Object","assign","chunk","md5Value","handleUploadProgress","handleUploadAccept","ret","uploadResponse","response","handleUploadError","reason","name","message","onChange","handleUploadSuccess","res","CSRF_token","_raw","parmas","resetImageName","window","console","log","sendTime","globalTime","setInterval","document","cookie","split","trim","startsWith","arr","i","indexOf","$","ajax","type","contentType","url","beforeSend","xhr","setRequestHeader","project","tag","code","clearInterval","catch","err","status","statusText","index","findIndex","curFile","file_name","ch2Unicdoe","JSON","stringify","retry","getFile","deleteFile","splice","removeFile","isChinese","str","test","unicode","temp","charAt","charCodeAt","toString","arr1","create","chunked","chunkSize","pick","chunkRetry","threads","fileSizeLimit","fileSingleSizeLimit","on","e","target","map","handleRename","width","children","border","style","renderFileList","Component","defaultProps","propTypes","object","func","number","bool","element"],"mappings":"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","file":"upload.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'expose-loader?$!expose-loader?jQuery!jquery';\nimport WebUploader from '../web/webuploader.nolog.min';\n\nconst uploadStatusConfig = {\n  init: {\n    btn: '开始上传',\n    clickName: 'upload',\n    barClassName: 'process-bar',\n  },\n  md5: {\n    btn: '计算md5中...',\n    barClassName: 'process-bar',\n  },\n  process: {\n    btn: '上传中 ...',\n    barClassName: 'process-bar',\n  },\n  done: {\n    btn: '上传完成',\n    barClassName: 'process-bar success-bar',\n  },\n  error: {\n    btn: '重新上传',\n    clickName: 'retry',\n    barClassName: 'process-bar error-bar',\n  },\n  synthetize: {\n    btn: '合成中...',\n    barClassName: 'process-bar',\n  },\n  success: {\n    btn: '上传成功',\n    barClassName: 'process-bar success-bar',\n  },\n  fail: {\n    btn: '等待超时',\n    barClassName: 'process-bar error-bar',\n  },\n  check_fail: {\n    btn: '查询失败',\n    barClassName: 'process-bar error-bar',\n  },\n};\n\nconst currying = (fn, ...ahead) => (...behind) => fn(...ahead, ...behind);\n\nexport default class LargeUploader extends React.Component {\n  static defaultProps = {\n    options: {},\n    onChange: () => {},\n    width: 700,\n    border: true,\n    children: <div className=\"btn-primary\" >选择文件</div>,\n    beforeFileQueued: () => true,\n    fillDataBeforeSend: () => ({}),\n    uploadResponse: () => true,\n  }\n\n  static propTypes = {\n    options: PropTypes.object,\n    onChange: PropTypes.func,\n    width: PropTypes.number,\n    border: PropTypes.bool,\n    children: PropTypes.element,\n    beforeFileQueued: PropTypes.func,\n    fillDataBeforeSend: PropTypes.func,\n    uploadResponse: PropTypes.func,\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      fileList: [],\n      error: '',\n      response: null,\n    };\n  }\n\n  componentDidMount() {\n    const { options } = this.props;\n    const uploader = WebUploader.create({\n      chunked: true,\n      chunkSize: 5 * 1024 * 1024,\n      pick: '#picker',\n      chunkRetry: 10,\n      threads: 1,\n      fileSizeLimit: 2000 * 1024 * 1024,\n      fileSingleSizeLimit: 2000 * 1024 * 1024,\n      ...options,\n      auto: false,\n    });\n    uploader.on('beforeFileQueued', this.handleBeforeFileQueued);\n    uploader.on('fileQueued', this.handleFileQueued);\n    uploader.on('uploadBeforeSend', this.handleBeforeSend);\n    uploader.on('uploadProgress', this.handleUploadProgress);\n    uploader.on('uploadAccept', this.handleUploadAccept);\n    uploader.on('uploadError', this.handleUploadError);\n    uploader.on('uploadSuccess', this.handleUploadSuccess);\n    this.uploader = uploader;\n\n    // WebUploader.Uploader.register({\n    //   \"before-send\":\"beforeSend\",  //每个分片上传前\n    // },\n    // {\n    //   //时间点2：如果有分块上传，则每个分块上传之前调用此函数  \n    //   beforeSend:  function(block) {\n    //     var deferred = WebUploader.Deferred();\n    //     $.ajax({\n    //       type: \"POST\",\n    //       url: \"${ctx}/testController/mergeOrCheckChunks.do?param=checkChunk\",  //ajax验证每一个分片\n    //       data: {\n    //         fileName : fileName,\n    //         jindutiao:  $(\"#jindutiao\").val(),\n    //         fileMd5:  fileMd5,  //文件唯一标记\n    //         chunk:  block.chunk,  //当前分块下标\n    //         chunkSize:  block.end - block.start//当前分块大小\n    //       },\n    //       cache: false,\n    //       async: false,  // 与js同步\n    //       timeout: 1000,  //todo 超时的话，只能认为该分片未上传过\n    //       dataType: \"json\",\n    //       success: function(response) {\n    //         if (response.ifExist) {\n    //           //分块存在，跳过\n    //           deferred.reject();\n    //         } else {\n    //           //分块不存在或不完整，重新发送该分块内容\n    //           deferred.resolve();\n    //         }\n    //       }\n    //     });\n              \n    //     this.owner.options.formData.fileMd5 = fileMd5;\n    //     deferred.resolve();\n    //     return deferred.promise();\n    //   },\n    // });\n  }\n\n  setFileItem = (key, value, id) => {\n    return new Promise((resolve) => {\n      const { fileList } = this.state;\n      const copy = [...fileList];\n      const result = copy.filter(item => item.id === id);\n      if (result.length) {\n        result[0][key] = value;\n        this.setState({\n          fileList: copy,\n        }, () => { resolve(); });\n      }\n    });\n  }\n\n  setUploadStatus = currying(this.setFileItem, 'uploadStatus')\n\n  handleBeforeFileQueued = file => {\n    const { beforeFileQueued } = this.props;\n    return beforeFileQueued(file);\n  }\n\n  handleFileQueued = file => {\n    const { fileList } = this.state;\n    const { options: { auto } } = this.props;\n    file.percentage = 0;\n    file.uploadStatus = 'md5';\n    file.image_name = '';\n    this.uploader.md5File(file, 0, 10*1024*1024)\n      .progress(() => {\n        this.setUploadStatus('md5', file.id);\n      })\n      // 完成\n      .then((val) => {\n        this.setUploadStatus('init', file.id);\n        this.setFileItem('md5Val', val, file.id);\n        if (auto && file.uploadStatus !== 'done') this.uploader.upload(file, file.id);\n      });\n    this.setState({\n      fileList: [...fileList, file],\n    });\n  }\n\n  handleBeforeSend = (block, data) => {\n    const { file: { md5Val, id }, chunks } = block;\n    const { fillDataBeforeSend } = this.props;\n    const v = fillDataBeforeSend();\n    Object.assign(data, v);\n    if (chunks === 1) { // 未切片的加入默认值\n      data.chunks = 1;\n      data.chunk = 0;\n    }\n    // data 中 加入 md5 值\n    data.md5Value = md5Val;\n    this.setUploadStatus('process', id);\n  }\n\n  handleUploadProgress = (file, percentage) => {\n    this.setFileItem('percentage', percentage, file.id);\n  }\n\n  handleUploadAccept = (file, ret) => {\n    const { uploadResponse } = this.props;\n    this.setState({\n      response: ret,\n    });\n    return uploadResponse(file, ret);\n  }\n\n  handleUploadError = (file, reason) => {\n    file.error = reason;\n    this.setState({\n      error: `${file.name}: ${reason.message}`,\n    });\n    this.setUploadStatus('error', file.id).then(() => {\n      this.props.onChange(file, this.state.fileList);\n    });\n  }\n\n  handleUploadSuccess = (file, res) => {\n    let CSRF_token = '';\n    const key = 'csrf-token=';\n    file.response = res._raw;\n    const parmas = this.resetImageName(file.image_name);\n    window.console.log('parmas: ', parmas);\n    this.setUploadStatus('done', file.id).then(() => {\n      let sendTime = 0;\n      file.globalTime = window.setInterval(() => {\n        sendTime += 1;\n        window.console.log('times: ', sendTime);\n        if (sendTime < 100) {\n          if (document.cookie.split(';').filter((item) => item.trim().startsWith(key)).length) {\n            const arr = document.cookie.split(';');\n            const length = arr.length;\n            for (let i = 0; i < length; i ++) {\n              if (arr[i].indexOf(key) > -1) {\n                CSRF_token = arr[i].split(key)[1];\n              }\n            }\n          }\n          $.ajax({\n            type: 'GET',\n            contentType: 'application/json;charset=UTF-8',\n            url: '/api/bigai/v1/project/image/upload/after',\n            beforeSend: function(xhr) {\n              xhr.setRequestHeader(\"X-CSRFToken\", CSRF_token);\n            },\n            data: {\n              // job_name: this.state.response.data.job_name,\n              // namespace: this.state.response.data.namespace,\n              project: parmas.project,\n              name: parmas.name,\n              tag: parmas.tag,\n            },\n          }).then((result) => {\n            window.console.log('success: ', result);\n            // if (result.code === 202) {\n            //   if (sendTime > 4) {\n            //     this.setUploadStatus('check_fail', file.id).then(() => {\n            //       this.props.onChange(file, this.state.fileList);\n            //     });\n            //     this.setState({\n            //       error: `查询${file.name}失败，请前往后台查看文件是否存在！`,\n            //     });\n            //     window.clearInterval(file.globalTime);\n            //   }\n            // } else if (result.code === 201) {\n            //   // this.setUploadStatus('synthetize', file.id).then(() => {\n            //   //   this.props.onChange(file, this.state.fileList);\n            //   // });\n            // } else if (result.code === 200) {\n            //   this.setUploadStatus('success', file.id).then(() => {\n            //     this.props.onChange(file, this.state.fileList);\n            //   });\n            //   window.clearInterval(file.globalTime);\n            // } else {\n            //   this.setState({\n            //     error: `${file.name}: ${result.message}`,\n            //   });\n            //   window.clearInterval(file.globalTime);\n            // }\n            if (result.code === 20207) {\n              // 不作为\n            } else if (result.code === 200) {\n              this.setUploadStatus('success', file.id).then(() => {\n                this.props.onChange(file, this.state.fileList);\n              });\n              window.clearInterval(file.globalTime);\n            } else {\n              this.setState({\n                error: `${file.name}: ${result.message}`,\n              });\n              window.clearInterval(file.globalTime);\n            }\n          }).catch((err) => {\n            this.setState({\n              error: `${file.name}, ${err.status}: ${err.statusText}`,\n            });\n            window.clearInterval(file.globalTime);\n          });\n        } else {\n          // 超时\n          this.setUploadStatus('fail', file.id).then(() => {\n            this.props.onChange(file, this.state.fileList);\n          });\n          this.setState({\n            error: `${file.name}: 等待时间过长，请前往后台查看文件上传是否成功`,\n          });\n          window.clearInterval(file.globalTime);\n        }\n      }, 10000);\n      this.props.onChange(file, this.state.fileList);\n      this.setUploadStatus('synthetize', file.id).then(() => {\n        this.props.onChange(file, this.state.fileList);\n      });\n    });\n  }\n\n  upload = (id) => () => {\n    const key = 'csrf-token=';\n    let CSRF_token = '';\n    const { fileList } = this.state;\n    const index = fileList.findIndex((item) => item.id === id);\n    const curFile = fileList[index];\n    if (!curFile.image_name) {\n      this.setState({\n        error: '镜像名不能为空！',\n      });\n    } else {\n      const file_name = this.ch2Unicdoe(curFile.image_name);\n      if (document.cookie.split(';').filter((item) => item.trim().startsWith(key)).length) {\n        const arr = document.cookie.split(';');\n        const length = arr.length;\n        for (let i = 0; i < length; i ++) {\n          if (arr[i].indexOf(key) > -1) {\n            CSRF_token = arr[i].split(key)[1];\n          }\n        }\n      }\n      $.ajax({\n        type: 'POST',\n        contentType: 'application/json;charset=UTF-8',\n        url: '/api/bigai/v1/project/image/upload/before',\n        beforeSend: function(xhr) {\n          xhr.setRequestHeader(\"X-CSRFToken\", CSRF_token);\n        },\n        data: JSON.stringify({ image_name: file_name }),\n      }).then((result) => {\n        window.console.log('success: ', result);\n        if (result.code === 200) {\n          this.uploader.upload(id);\n          this.setState({\n            error: '',\n          });\n        } else {\n          this.setState({\n            error: `${curFile.name}: ${result.message}`,\n          });\n        }\n      }).catch((err) => {\n        window.console.log('error: ', err);\n        this.setState({\n          error: `${curFile.name}, ${err.status}: ${err.statusText}`,\n        });\n      });\n    }\n  }\n\n  retry = (id) => () => {\n    this.setUploadStatus('process', id);\n    this.uploader.retry(this.uploader.getFile(id));\n  }\n\n  deleteFile = (id) => () => {\n    const { fileList } = this.state;\n    const index = fileList.findIndex((item) => item.id === id);\n    const curFile = fileList[index];\n    if (curFile.globalTime) window.clearInterval(curFile.globalTime); // 清理时间计数器\n    fileList.splice(index, 1);\n    this.setState({\n      fileList,\n      error: '',\n    }, () => {\n      this.props.onChange(curFile, this.state.fileList);\n    });\n    this.uploader.removeFile(this.uploader.getFile(id, true));\n  }\n\n  isChinese = (str) => {\n    return /[\\u4e00-\\u9fa5]/.test(str);\n  }\n\n  ch2Unicdoe = (str) => {\n    if (!str) {\n      return;\n    }\n    const length = str.length;\n    let unicode = '';\n    for (let i = 0; i < length; i++) {\n      const temp = str.charAt(i);\n      if (this.isChinese(temp)) {\n        unicode += '\\\\u' +  temp.charCodeAt(0).toString(16);\n      } else {\n        unicode += temp;\n      }\n    }\n    return unicode;\n  }\n\n  resetImageName = (str) => {\n    window.console.log('resetImageName: ', str);\n    const arr = str.split('/');\n    const arr1 = arr[2].split(':');\n    return {\n      project: arr[1],\n      name: arr1[0],\n      tag: arr[1],\n    };\n  }\n\n  handleRename(e, id) {\n    const { fileList } = this.state;\n    const index = fileList.findIndex((item) => item.id === id);\n    const curFile = fileList[index];\n\n    curFile.image_name = e.target.value;\n    this.setFileItem('image_name', e.target.value, id);\n    this.setState({\n      fileList,\n    });\n  }\n\n  renderFileList() {\n    const { fileList } = this.state;\n    return fileList.map((item) => {\n      const { id, percentage, uploadStatus, name, image_name } = item;\n      const { clickName, btn, barClassName } = uploadStatusConfig[uploadStatus];\n      return (\n        <div key={id} className=\"file-item\" >\n          <div className=\"file-box\">\n            <p>文件名：</p>\n            <span className=\"file-name\">{name}</span>\n          </div>\n          <div className=\"file-box\">\n            <p>镜像名称：</p>\n            <input type=\"text\" className=\"file-name\" defaultValue={image_name} onChange={(e) => this.handleRename(e, id)} />\n          </div>\n          <div className=\"file-box file-buttons\">\n            <span className={`file-status ${uploadStatus}-status`} onClick={this[clickName] ? this[clickName](id) : null}>{btn}</span>\n            <span className=\"delete\" onClick={this.deleteFile(id)}>取消</span>\n          </div>\n          <div className=\"process\">\n            <div className={barClassName} style={{ width: `${percentage * 100}%` }} />\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    const { children, border, width } = this.props;\n    const { error } = this.state;\n    const style = border ? { width } : { width, border: 'none' };\n    return (\n      <div className=\"large-uploader\" style={style}>\n        <div className=\"file-list\">\n          {this.renderFileList()}\n        </div>\n        <div id=\"picker\">\n          {children}\n        </div>\n        <p>{error}</p>\n      </div>\n    );\n  }\n\n  // render() {\n  //   const { children, border, width } = this.props;\n  //   const { error } = this.state;\n  //   const style = border ? { width } : { width, border: 'none' };\n  //   return (\n  //     <div className=\"large-uploader\" style={style}>\n  //       <div className=\"file-col\">\n  //         <p>文件名：</p>\n  //         <span className=\"file-name\">{name}</span>\n  //         <div id=\"picker\">\n  //           {children}\n  //         </div>\n  //       </div>\n  //       <div className=\"file-col\">\n  //         <p>镜像名称：</p>\n  //         <input type=\"text\" className=\"file-name\" defaultValue={image_name} onChange={(e) => this.handleRename(e, id)} />\n  //       </div>\n  //       <div className=\"file-col\">\n  //         <span className={`file-status ${uploadStatus}-status`} onClick={this[clickName] ? this[clickName](id) : null}>{btn}</span>\n  //         <span className=\"delete\" onClick={this.deleteFile(id)}>取消</span>\n  //       </div>\n  //       <p>{error}</p>\n  //     </div>\n  //   );\n  // }\n}\n"]}